name: Deploy Google Apps Script

on:
  push:
    branches:
      - main
      - fix-main-deploy-debug  # Temporarily added for debugging
    paths:
      - 'src/apps-script/**'
      - '.github/workflows/deploy-apps-script.yml'
  workflow_dispatch:

env:
  SCRIPT_ID: '1ih6hahfWWHXXaRdZ7gq3VTYSFS8-88mqKJTRJoBm1l363TosDH_y2tWj'
  DEPLOYMENT_ID: 'AKfycbyWuGn7rigFDy1CQOVuepcSkaouCbUhNw7aeq07clE'

jobs:
  deploy:
    name: Deploy to Google Apps Script
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: npm install
      
      - name: Debug - Check if CLASP_CREDENTIALS secret exists
        run: |
          if [ -z "${{ secrets.CLASP_CREDENTIALS }}" ]; then
            echo "::error::CLASP_CREDENTIALS secret is empty or not set"
          else
            echo "CLASP_CREDENTIALS secret is set (length: ${#CLASP_CREDENTIALS_LENGTH})"
          fi
        env:
          CLASP_CREDENTIALS_LENGTH: ${{ secrets.CLASP_CREDENTIALS }}
      
      - name: Setup clasp authentication
        run: |
          # Debug: Check the raw secret format
          echo "Debug: First 10 chars of secret (base64): $(echo '${{ secrets.CLASP_CREDENTIALS }}' | base64 | head -c 10)"
          echo "Debug: Length of secret: ${#CLASP_CREDS}"
          
          # Try to fix potential JSON issues
          # Remove potential BOM, trim whitespace, and ensure proper JSON
          echo '${{ secrets.CLASP_CREDENTIALS }}' | sed 's/^\xEF\xBB\xBF//' | tr -d '\r' > ~/.clasprc.json.tmp
          
          # Validate and pretty-print JSON
          if jq . ~/.clasprc.json.tmp > ~/.clasprc.json 2>/dev/null; then
            echo "Successfully parsed and formatted JSON"
          else
            echo "Failed to parse JSON, trying alternative approach"
            # Try removing outer quotes if they exist
            echo '${{ secrets.CLASP_CREDENTIALS }}' | sed 's/^"//;s/"$//' | sed 's/^\xEF\xBB\xBF//' | tr -d '\r' > ~/.clasprc.json
          fi
          
          chmod 600 ~/.clasprc.json
          
          # Also try the newer location
          mkdir -p ~/.config/clasp
          cp ~/.clasprc.json ~/.config/clasp/.clasprc.json
          chmod 600 ~/.config/clasp/.clasprc.json
          
          # Clean up temp file
          rm -f ~/.clasprc.json.tmp
        env:
          CLASP_CREDS: ${{ secrets.CLASP_CREDENTIALS }}
          
      - name: Debug - Verify clasp credentials files
        run: |
          echo "Checking ~/.clasprc.json:"
          if [ -f ~/.clasprc.json ]; then
            echo "File exists"
            echo "File size: $(stat -c%s ~/.clasprc.json 2>/dev/null || stat -f%z ~/.clasprc.json) bytes"
            echo "File permissions: $(ls -la ~/.clasprc.json)"
            echo "First 50 chars (masked): $(head -c 50 ~/.clasprc.json | sed 's/[^{},:]/*/g')"
            echo "JSON structure check:"
            if jq empty ~/.clasprc.json 2>/dev/null; then
              echo "Valid JSON"
              echo "Top-level keys: $(jq -r 'keys[]' ~/.clasprc.json 2>/dev/null | tr '\n' ' ')"
            else
              echo "::error::Invalid JSON in ~/.clasprc.json"
            fi
          else
            echo "::error::~/.clasprc.json file not found"
          fi
          
          echo ""
          echo "Checking ~/.config/clasp/.clasprc.json:"
          if [ -f ~/.config/clasp/.clasprc.json ]; then
            echo "File exists"
            echo "File size: $(stat -c%s ~/.config/clasp/.clasprc.json 2>/dev/null || stat -f%z ~/.config/clasp/.clasprc.json) bytes"
            echo "File permissions: $(ls -la ~/.config/clasp/.clasprc.json)"
            echo "First 50 chars (masked): $(head -c 50 ~/.config/clasp/.clasprc.json | sed 's/[^{},:]/*/g')"
          else
            echo "::error::~/.config/clasp/.clasprc.json file not found"
          fi
      
      - name: Setup .clasp.json
        run: |
          echo '{
            "scriptId": "${{ env.SCRIPT_ID }}",
            "rootDir": "./src/apps-script"
          }' > .clasp.json
          
      - name: Debug - Verify .clasp.json
        run: |
          echo "Contents of .clasp.json:"
          cat .clasp.json
          echo ""
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
      
      - name: Debug - Check clasp installation
        run: |
          echo "Clasp version:"
          npx clasp --version
          echo ""
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
      
      - name: Debug - Check configuration
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of .clasp.json:"
          cat .clasp.json
          echo "Checking for .clasprc.json:"
          ls -la ~/.clasprc.json || echo "~/.clasprc.json not found"
          echo "Checking clasp config directory:"
          ls -la ~/.config/clasp/ || echo "~/.config/clasp/ not found"
          echo "Environment variables:"
          echo "SCRIPT_ID=${{ env.SCRIPT_ID }}"
          echo "DEPLOYMENT_ID=${{ env.DEPLOYMENT_ID }}"
          echo "HOME=$HOME"
      
      - name: Debug - Test clasp authentication
        run: |
          echo "Testing clasp status command:"
          npx clasp status || echo "clasp status failed"
          
          echo ""
          echo "Trying to list projects:"
          npx clasp list || echo "clasp list failed"
          
          echo ""
          echo "Check if we need to set CLASP_CREDENTIALS env var:"
          export CLASP_CREDENTIALS='${{ secrets.CLASP_CREDENTIALS }}'
          npx clasp status || echo "clasp status with env var failed"
      
      - name: Push to Google Apps Script
        run: npm run clasp:push
      
      - name: Deploy (if deployment ID is set)
        if: env.DEPLOYMENT_ID != ''
        run: npx clasp deploy --deploymentId ${{ env.DEPLOYMENT_ID }}
      
      - name: Cleanup credentials
        if: always()
        run: |
          rm -f ~/.clasprc.json .clasp.json
          rm -f ~/.config/clasp/.clasprc.json